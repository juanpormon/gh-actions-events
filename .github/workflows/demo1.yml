name: Events Demo 1
on:
  push:
    branches:
      - main
      - feat/*   # Covers everything except slashes
      - test/**  # Covers everything including slashes feat/BB-23214/BB-231231
    paths-ignore: 
      - '.gitignore'            #Ignores changes in the gitignore
#      - '.github/workflows/*'   #Ignores changes in the workflows
  workflow_dispatch:
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Output event data
        run: echo "${{ toJSON(github.event) }}"
      - name: Get code
        uses: actions/checkout@v3
      ## Cache works BEFORE the step we want to cache
      ## The same cache is used in the whole workflow
      - name: Dependencies Cache
        id: cache
        uses: actions/cache@v3
        with:
          ## The hashfiles changes if the file changes, so it will be unique for each configuration
          key: dependencies-cache-${{ hashFiles('**/package-lock.json') }}
          path: node_modules
      - name: Install dependencies
        if: ${{ steps.cache.outputs.cache-hit != 'true'}}
        run: npm ci
      - name: Test code
        id: testing-process
        run: npm run test
      - name: Upload test report
        if: failure() && ${{ steps.testing-process.outcome == 'failure' }} 
        ## We need the failure function in the if condition to allow the previous step to failure and keep working
        ## Is one of the 4 special functions on the if statement in github actions
        uses: actions/upload-artifact@v3
        with: 
          name: test-report
          path: test.json

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Dependencies Cache
        id: cache
        uses: actions/cache@v3
        with:
          key: dependencies-cache-${{ hashFiles('**/package-lock.json') }}
          path: node_modules
      - name: Install dependencies
        if: ${{ steps.cache.outputs.cache-hit != 'true'}}
        run: npm ci
      - name: Lint code
        run: npm run lint
      
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      custom-output: ${{ steps.js-filename.outputs.name-of-the-step }}
      #Steps
      #Id
      #What we want of that Id, in this case, the outputs
      #As we defined the name-of-the-step as $GITHUB_OUTPUT, this will be the output of the id
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Dependencies Cache
        id: cache
        uses: actions/cache@v3
        with:
          key: dependencies-cache-${{ hashFiles('**/package-lock.json') }}
          path: node_modules
      - name: Install dependencies
        if: ${{ steps.cache.outputs.cache-hit != 'true'}}
        run: npm ci
      - name: Build code
        run: npm run build
      - name: Publish JS filename
        id: js-filename
        run: find dist/assets/*.js -type f -execdir echo 'name-of-the-step={}' >> $GITHUB_OUTPUT ';' # We are creating a variable called name-of-the-step, not related with the output, but then we assign the output to $GITHUB_OUTPUT
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: built-app
          path: |
            dist
            package.json

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        run: echo "Deploying app..."
      - name: Deploy project
        uses: actions/download-artifact@v3
        with: 
          name: built-app
      - name: List artifacts
        run: ls -la
      - name: Print output
        run: echo "${{ needs.build.outputs.custom-output }}"
  
  report: 
    ## Only will be excecuted if other job fails
    needs: [lint, deploy]
    ## Lint and deploy will contain all other jobs failing, lint as is independent and deploy contains all the others
    if: failure()
    runs-on: ubuntu-latest
    steps: 
      - name: Report if something went wrong
        run: |
          echo "something went wrong"
          echo ${{ toJson(github) }}
